$.ajax({
  type: "GET",
  dataType: "json",
  url: "https://pwned.blog/pentest-docker/get_pentestdocker_modules.php",
  success: function(data){
    json = data;
    var grid = $('#main-grid');
    jQuery.each(json, function(moduleType, modules) {
      var block = $(document.createElement('div'));
      block.addClass('grid-item');

      var block_title = $(document.createElement('div'));
      block_title.text(moduleType);
      block_title.addClass('grid-item-title');
      block.append(block_title);

      var block_options = $(document.createElement('div'));
      block_options.addClass('grid-item-options');
      block.append(block_options);

      jQuery.each(modules, function(module) {
        var option = $(document.createElement('div'));

        var option_check = $(document.createElement('input'));
        option_check.attr("type", "checkbox");
        option_check.attr("name", "options");
        option_check.attr("value", moduleType + "/" + modules[module]);
        option_check.attr("id", moduleType + "/" + modules[module]);

        var option_label = $(document.createElement('label'));
        option_label.attr("for", moduleType + "/" + modules[module]);
        option_label.text(modules[module]);

        option.append(option_check);
        option.append(option_label);

        block_options.append(option);
      });
      grid.append(block);
    });

    $('#loading').hide();
    $('#loaded').show();

    var elem = document.getElementsByClassName('grid')[0];
    var msnry = new Masonry( elem, {
      itemSelector: '.grid-item',
      gutter: 10
    });

  },
  error: function(data, textStatus, errorThrown){
    swal("Retrieval Error", "\"" + errorThrown + "\" error occured in retrieving content for module \"" + moduleType + "/" + module + "\" from GitHub. Please try again.", "error");
    resetButton();
  }
});

var fullDockerFile = "";
var completionCurrent = 0;
var completionFull = 0;

function initCreateDockerFile() {
  fullDockerFile = "";

  $('.download-button').prop('disabled', true);
  $('.download-button').removeClass('button-primary');
  $('.download-button').text('Preparing Download...');
  var checkedModules = $("input:checkbox:checked").map(function(){
    return $(this).val();
  }).get();
  $.ajax({
    type: "GET",
    url: "https://raw.githubusercontent.com/ayomawdb/pentest-docker/master/PARENT",
    success: function(data){
      var moduleHeader = "### " + getLineBreakSequence();
      moduleHeader += "### PentestDocker - Parent DockerFile" + getLineBreakSequence();
      moduleHeader += "### Generated Using: https://ayomawdb.github.io/pentest-docker" + getLineBreakSequence();
      moduleHeader += "### " + getLineBreakSequence() + getLineBreakSequence();

      fullDockerFile += moduleHeader + data + getLineBreakSequence() + getLineBreakSequence();

      startDownload(fullDockerFile, 'Dockerfile');

      fullDockerFile = "";
      createDockerFile(checkedModules);
    },
    error: function(data, textStatus, errorThrown){
      swal("Retrieval Error", "\"" + errorThrown + "\" error occured in retrieving content for DockerFile parent from GitHub. Please try again.", "error");
      resetButton();
    }
  });
}

function resetButton() {
  $('.download-button').prop('disabled', false);
  $('.download-button').addClass('button-primary');
  $('.download-button').text('Start Download');
}

function createDockerFile(modules) {
  completionCurrent = 0;
  completionFull = modules.length;

  var ajaxResults = [];
  $('.download-button').text('Preparing Download... (' + completionCurrent + '/' + completionFull + ' complete)');
  for (index = 0; index < modules.length; ++index) {
    var modulesSplits = modules[index].split("/");

    getRawFile(ajaxResults, modulesSplits[0], modulesSplits[1]);
  }
  $.when.apply(this, ajaxResults).done(function() {
    startDownload(fullDockerFile, 'script.sh');
    resetButton();
    swal("Download Complete", "PentestDocker has started the download of your DockerFile", "success");
  });
}

function getRawFile(ajaxResults, moduleType, module) {
  var url = "https://raw.githubusercontent.com/ayomawdb/pentest-docker/master/modules/" + moduleType + "/" + module;
  var asyncReq = $.ajax({
    type: "GET",
    url: url,
    success: function(data){
      var moduleHeader = "### " + getLineBreakSequence();
      moduleHeader += "### " + moduleType + " - " + module + getLineBreakSequence();
      moduleHeader += "### " + getLineBreakSequence() + getLineBreakSequence();

      fullDockerFile += moduleHeader + data + getLineBreakSequence() + getLineBreakSequence();

      completionCurrent++;
      $('.download-button').text('Preparing Download... (' + completionCurrent + '/' + completionFull + ' complete)');
    },
    error: function(data, textStatus, errorThrown){
      swal("Retrieval Error", "\"" + errorThrown + "\" error occured in retrieving content for module \"" + moduleType + "/" + module + "\" from GitHub. Please try again.", "error");
      resetButton();
    }
  });
  ajaxResults.push(asyncReq);
}

// Thanks to https://stackoverflow.com/questions/6833269/javascript-platform-independent-line-separator
var cachedLineBreakSeq = "";
function getLineBreakSequence() {
  if(cachedLineBreakSeq == "") {
    var div, ta, text;

    div = document.createElement("div");
    div.innerHTML = "<textarea>one\ntwo</textarea>";
    ta = div.firstChild;
    text = ta.value;
    cachedLineBreakSeq = text.indexOf("\r") >= 0 ? "\r\n" : "\n";
  }
  return cachedLineBreakSeq;
}

// Thanks to https://stackoverflow.com/questions/24898044/is-possible-to-save-javascript-variable-as-file
function startDownload(textToSave, filename) {
  var hiddenElement = document.createElement('a');

  hiddenElement.href = 'data:attachment/text,' + encodeURI(textToSave);
  hiddenElement.target = '_blank';
  hiddenElement.download = filename;
  hiddenElement.click();
}
